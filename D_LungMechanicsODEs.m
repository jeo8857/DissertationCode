function sys = D_LungMechanicsODEs(t,s,par,Y,res,vol,geom_mode,ratio)

convf = 100;

% save each column as array
gnum = Y{:,1}; % generation number
n = Y{:,2}; % number of airways in each generation
Ldata = Y{:,3}/convf; % length of airways in each generation converted FROM centimeters TO meters
rdata = Y{:,4}/2/convf; % radius of airways in each generation (diameter cut in half and converted FROM centimeters TO meters)
V = Y{:,8}./10^6; % volume

% Indices for each compartment
c1_ind = 1; % compartment 1 consists of the trachea (generation 1 in Yeh)
c2_ind = 2:5; % compartment 2 consists of the main bronchus and bronchioles (generations
% 2-5 in Yeh)
c3_ind = 6:16; % compartment 3 consists of the conductive and transitory airways (generations
% 6-16 in Yeh)
% c4_ind = 17:length(gnum); % compartment 4 consists of the respiratory airways and alveoli (generations
% % 17-25 in Yeh)
c4_ind = 17:length(gnum)-1; % compartment 4 consists of the respiratory airways and alveoli (generations
% 17-25 in Yeh)
c5_ind = length(gnum);

% Scale to our desired lung volume to initialize
sc = (vol.TLC/sum(V))^(1/3); % scaled to TLC
r0 = rdata*sc;
L0 = Ldata*sc;

if ratio==1
    VDratio = sum(V([c1_ind c2_ind c3_ind]))/sum(V);
%     VRratio = sum(V(c4_ind))/sum(V);
elseif ratio==2
% Me experimenting
    VDratio = .12;
%     VRratio = .88;
end

VDTLC = VDratio*vol.TLC;
VRTLC = (1-VDratio)*vol.TLC;

% STATE VARIABLES
Ppl = s(1); % intrapleural pressure
Pt = s(2); % pressure in larynx
Pb = s(3); % pressure in trachea
Pc = s(4); % pressure in bronchai
Pra = s(5); % pressure in alveoli (lung pressure)

Vt = par.Ct*Pt+par.Vut; % volume of air in trachea
Vb = par.Cb*(Pb-Ppl)+par.Vub; % volume of air in bronchea
Vc = par.Cc*(Pc-Ppl)+par.Vuc; % volume of air in conducting airways
% Vra = par.Cra*(Pra-Ppl)+par.Vura; % volume of air in respiratory airways
VA = par.Cra*(Pra-Ppl)+par.Vura;
% Vtotal = Vt+Vb+Vc+Vra;
Vtotal = Vt+Vb+Vc+VA;

if geom_mode==1
    cscale = 1;
    rscale = 1;
elseif geom_mode==2
    cscale = ((Vt+Vb+Vc)/VDTLC)^(1/2); % updated
%     rscale = (Vra/VRTLC)^(1/3); % updated
    rscale = (VA/VRTLC)^(1/3); % updated
end

r = ones(size(r0));
L = ones(size(L0));

% group generations into compartments
r(c1_ind) = r0(c1_ind)*cscale; 
L(c1_ind) = L0(c1_ind);

r(c2_ind) = r0(c2_ind)*cscale;
L(c2_ind) = L0(c2_ind);

r(c3_ind) = r0(c3_ind)*cscale;
L(c3_ind) = L0(c3_ind);

r(c4_ind) = r0(c4_ind)*rscale;
L(c4_ind) = L0(c4_ind)*rscale;

r(c5_ind) = r0(c5_ind)*rscale;
L(c5_ind) = L0(c5_ind)*rscale;
r = r(:);
L = L(:);

% calculate parallel resistance based on Pouseille flow - this is the 
% resistance in each generation
mu = par.mu/98.0665; % convert viscosity FROM pascal seconds TO cmh2o seconds (1 cmh2o = 98.0665 Pa)

R = (8/pi)*mu*(L./r.^4)./n; % cmh2o s m^-3 - resistance in identical parallel tubes
% n
% pause

Rt = sum(R(c1_ind));
Rb = sum(R(c2_ind));
Rc = sum(R(c3_ind));
% Rra = sum(R(c4_ind));
Rra = sum(R([c4_ind c5_ind]));

% Rt = 1.021*1e3;
% Rb = 0.3369*1e3;
% Rc = 0.3063*1e3;
% Rra = 0.0817*1e3;

% BREATHING DYNAMICS
tt = mod(t,res.T);

if tt>=0 && tt<=res.TI
    dPmus = -2*res.Pmusmin*tt/(res.TI*res.TE)+res.Pmusmin*res.T/(res.TI*res.TE); % Pmus - pressure generated by respiratory muscles 
    u = 1;
elseif tt>res.TI && tt<=res.T
    dPmus = res.Pmusmin/(1-exp(-res.TE/res.tau))*(-1/res.tau)*exp(-(tt-res.TI)/res.tau);
    u = 0;
end

% VOLUMETRIC FLOWS

Qt = (par.Pao-Pt)/Rt; 
Qb = (Pt-Pb)/Rb; 
Qc = (Pb-Pc)/Rc; 
Qra = (Pc-Pra)/Rra;
% Rra
% pause
% Qra*1000
% pause
%==========================================================================

% PRESSURE ODEs
sys(1) = 1/par.CCW*Qb+dPmus; % Ppl - intrapleural pressure 
sys(2) = 1/par.Ct*(Qt-Qb); % Pt - pressure in trachea 
sys(3) = 1/par.Cb*(Qb-Qc)+sys(1); % Pb - pressure in bronchea
sys(4) = 1/par.Cc*(Qc-Qra)+sys(1); % Pc - bronchial conducting airways
sys(5) = 1/par.Cra*(Qra)+sys(1); % Pra - pressure in respiratory airways 

sys = sys';

end


