function TV = B_LungMechanicsSolver(parameters,Y,solvetime)

par = parameters;
% morph = morphometry;

% Initial conditions
IC = [-5 0 0 0 0]; % [Ppl Pt Pb Pc Pra]

% SOLVE ODE SYSTEM=========================================================
%==========================================================================
tic
[t,s] = ode15s(@(t,s) D_LungMechanicsODEs(t,s,par,Y),solvetime,IC);
toc
 
% CALCULATE ALGEBRAIC VALUES===============================================
%==========================================================================
% The algebraic values can be calculated using the solutions of the
% differential system.

% Rename solutions---------------------------------------------------------

% These are outputs the user may want to plot

% Respiratory

Ppl = s(:,1);
Pt = s(:,2);
Pb = s(:,3);
Pc = s(:,4); 
Pra = s(:,5);

% Volumes

% cubic meters
Vt = par.Ct.*Pt+par.Vut;
Vb = par.Cb.*(Pb-Ppl)+par.Vub;
Vc = par.Cc.*(Pc-Ppl)+par.Vuc;
Vra = par.Cra*(Pra-Ppl)+par.Vura; % lung volume
VD = Vt+Vb+Vc; % anatomical deadspace volume
Vtotal = Vt+Vb+Vc+Vra; % total volume in respiratory tract

% liters
% Vt = Vt*1e3;
% Vb = Vb*1e3;
% Vc = Vc*1e3;
% Vra = Vra*1e3;
% Vtotal = Vtotal*1e3;

% Standard volumes
FRC = min(Vtotal); % functional residual capacity
TV = max(Vtotal)-min(Vtotal); % tidal volume

% Volumetric flows
Qt = (par.Pao-Pt)/morph.Rt; 
Qb = (Pt-Pb)/morph.Rb; 
Qc = (Pb-Pc)/morph.Rc; 
Qra = (Pc-Pra)/morph.Rra; 

% Qt = Qt*1e3;
% Qb = Qb*1e3;
% Qc = Qc*1e3;
% Qra = Qra*1e3;

% total flow rates
% QI = TV/par.TI; % volumetric flow during inhale
% QE = TV/par.TE; % volumetric flow during exhale

% tt = mod(t,par.T);
% 
% for i = 1:length(tt)
%     if tt(i)>=0 && tt(i)<=par.TI
%         Pmus(i) = -par.Pmusmin*tt(i)^2/(par.TI*par.TE)+par.Pmusmin*par.T.*tt(i)/(par.TI*par.TE); % Pmus - pressure generated by respiratory muscles 
%         u(i) = 1;
%     elseif tt(i)>par.TI && tt(i)<=par.T
%         Pmus(i) = par.Pmusmin/(1-exp(-par.TE/par.tau))*(exp(-(tt(i)-par.TI)/par.tau)-exp(-par.TE/par.tau));
%         u(i) = 0;
%     end
% end

% FIGURES==================================================================

% particles enter the system and can move between compartments, but can't
% leave the system

% figure(1)
% hold on
% plot(t,Vra*1000)
% title('volume')
% 
% figure(2)
% hold on
% plot(t,Pra)
% title('pressure in bronchai')

% figure(2)
% plot(t,Ppl)
% plot(t,Pra-Ppl)
% title('intrapleural pressure')

end