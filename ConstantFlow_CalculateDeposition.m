function [f,g] = ConstantFlow_CalculateDeposition(t,s,dp,par,res,Y,vol,mech,geom_mode,breaths,ratio,Qin,Qex,Vin,Vex)

% FOR FIGURES
set(groot,'defaultLineLineWidth',1, 'defaulttextInterpreter', 'latex', ...
     'defaultLegendInterpreter', 'latex')
set(groot,'defaultAxesTickLabelInterpreter','latex');
set(groot,'defaultAxesFontSize', 18)
set(groot,'defaultFigureColor',[1 1 1])
set(groot,'defaultLegendFontSize',18,'DefaultLegendFontSizeMode','manual')

tt = mod(t,res.T);
for i = 1:length(tt)
    if tt(i)>=0 && tt(i)<=res.TI
        Pmus(i) = -res.Pmusmin*tt(i)^2/(res.TI*res.TE)+res.Pmusmin*res.T.*tt(i)/(res.TI*res.TE); % Pmus - pressure generated by respiratory muscles 
        u(i) = 1;
    elseif tt(i)>res.TI && tt(i)<=res.T
        Pmus(i) = res.Pmusmin/(1-exp(-res.TE/res.tau))*(exp(-(tt(i)-res.TI)/res.tau)-exp(-res.TE/res.tau));
        u(i) = 0;
    end
end

% Particles
Nt = s(:,1);
Dt = s(:,2);
Nb = s(:,3);
Db = s(:,4);
Nc = s(:,5);
Dc = s(:,6);
Nra = s(:,7);
Dra = s(:,8);
Nalv = s(:,9);
Dalv = s(:,10);
Ntotal = Nt+Nb+Nc+Nra+Nalv;
Dtotal = Dt+Db+Dc+Dra+Dalv;

TIind = find(abs(res.TI-t)==min(abs(res.TI-t))); % index at end of first inhalation
Tind = find(abs(res.T-t)==min(abs(res.T-t))); % index at end of first breat
In = trapz(t(1:TIind),u(1:TIind)'.*Qin(1).*par.Cin); % total amount breathed in

TIind2 = find(abs(((breaths-1)*res.T+res.TI)-t)==min(abs(((breaths-1)*res.T+res.TI)-t))); % index at end of steady state inhalation
Tind2 = find(abs((breaths-1)*res.T-t)==min(abs((breaths-1)*res.T-t))); % index at beginning of steady state breath
In2 = In+Ntotal(Tind2); % amount breathed in plus amount suspended at beginning of breath

% figure
% hold on
% plot(t,Ntotal)
% plot(t(TIind2),Ntotal(TIind2),'ro')
% plot(t(Tind2),Ntotal(Tind2),'bo')
% 
% figure
% hold on
% plot(t,Dtotal)
% plot(t(end),Dtotal(end),'ro')
% plot(t(Tind2),Dtotal(Tind2),'bo')
% stop

% Fraction of inhaled particles that are deposited during inhale
% f(1) = (Dt(end)-Dt(Tind2))/In2;
% f(2) = (Db(end)-Db(Tind2))/In2;
% f(3) = (Dc(end)-Dc(Tind2))/In2;
% f(4) = (Dra(end)-Dra(Tind2))/In2;
% f(5) = (Dtotal(end)-Dtotal(Tind2))/In2;

f(1) = (Dt(end)-Dt(Tind2))/In2;
f(2) = (Db(end)-Db(Tind2))/In2;
f(3) = (Dc(end)-Dc(Tind2))/In2;
f(4) = (Dra(end)-Dra(Tind2))/In2;
f(5) = (Dalv(end)-Dalv(Tind2))/In2;
f(6) = (Dtotal(end)-Dtotal(Tind2))/In2;

% Fraction of inhaled particles that are suspended
% g(1) = Nt(end)/In2;
% g(2) = Nb(end)/In2;
% g(3) = Nc(end)/In2;
% g(4) = Nra(end)/In2;
% g(5) = Ntotal(end)/In2;

g(1) = Nt(end)/In2;
g(2) = Nb(end)/In2;
g(3) = Nc(end)/In2;
g(4) = Nra(end)/In2;
g(5) = Nalv(end)/In2;
g(6) = Ntotal(end)/In2;

end